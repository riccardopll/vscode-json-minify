name: CI

on:
  push:
    branches:
      - main

concurrency:
  group: publish-main
  cancel-in-progress: true

jobs:
  publish:
    name: Publish VSIX to VSCE and Open VSX
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      VSCE_PAT: ${{ secrets.VSCE_PAT }}
      OVSX_PAT: ${{ secrets.OVSX_PAT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Set version from run number (no git tag)
        run: |
          # Extract major.minor from current package.json using Node (no heredoc)
          BASE_MAJOR_MINOR=$(node -p 'const v=require("./package.json").version||"0.0.0"; const a=v.split("."); console.log((a[0]||"0")+"."+(a[1]||"0"))')
          # Set version to major.minor.<run_number> without creating a git tag or commit
          npm version "${BASE_MAJOR_MINOR}.${GITHUB_RUN_NUMBER}" --no-git-tag-version
          echo "VERSION=$(node -p \"require('./package.json').version\")" >> $GITHUB_ENV

      - name: Package extension (.vsix)
        run: npx vsce package

      - name: Locate VSIX
        id: vsix
        run: |
          VSIX_FILE=$(ls *.vsix)
          echo "vsix=${VSIX_FILE}" >> $GITHUB_OUTPUT

      - name: Publish to VS Code Marketplace (VSCE)
        if: env.VSCE_PAT != ''
        run: npx vsce publish --packagePath "${{ steps.vsix.outputs.vsix }}" -p "$VSCE_PAT"

      - name: Publish to Open VSX Registry (OVSX)
        if: env.OVSX_PAT != ''
        run: npx ovsx publish "${{ steps.vsix.outputs.vsix }}" -p "$OVSX_PAT"

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-${{ env.VERSION }}
          path: ${{ steps.vsix.outputs.vsix }}
